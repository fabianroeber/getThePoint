<ui:composition template="../template.xhtml"
	xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://xmlns.jcp.org/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:p="http://primefaces.org/ui"
	xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:o="http://omnifaces.org/ui"
	xmlns:of="http://omnifaces.org/functions"
	xmlns:ui="http://java.sun.com/jsf/facelets">
	<ui:define name="pageheader">

	</ui:define>
	<ui:define name="content">
		<h:form rendered="#{menuBean.hasLehrenderRole()}">

			<p:growl id="growl" showDetail="true" escape="false" />

			<p:dataTable id="testlist"
				value="#{wissenstestVerwaltungBean.wissenstests}"
				selection="#{wissenstestVerwaltungBean.selectedWissenstest}"
				selectionMode="single" type="ordered" var="test" rowIndexVar="row"
				rowKey="#{test.id}" itemType="none">
				<f:facet name="header">VerfÃ¼gbare Tests</f:facet>
				<p:column>
					<p:outputLabel value="#{test.bezeichnung}" />
				</p:column>
				<p:ajax event="rowSelect"
					listener="#{wissenstestVerwaltungBean.onRowSelect(test)}"
					update="@form"></p:ajax>
			</p:dataTable>


			<p:panel id="grundeinstellungen"
				header="Grundeinstellungen #{wissenstestVerwaltungBean.selectedWissenstest.bezeichnung}"
				collapsed="true" toggleable="true" toggleSpeed="500">
				<p:panelGrid columns="2">
					<p:outputLabel for="bezeichnung" value="Bezeichnung"></p:outputLabel>
					<p:inputText id="bezeichnung"
						value="#{wissenstestVerwaltungBean.selectedWissenstest.bezeichnung}"></p:inputText>
					<p:outputLabel for="time" value="Zeit pro Frage (s)"></p:outputLabel>
					<p:inputText id="time"
						value="#{wissenstestVerwaltungBean.selectedWissenstest.bearbeitungszeit}"></p:inputText>
					<p:outputLabel for="start" value="Startzeit"></p:outputLabel>
					<p:calendar id="start" pattern="dd/MM/yyyy HH:mm" timeZone="CET"
						value="#{wissenstestVerwaltungBean.selectedWissenstest.startzeit}"></p:calendar>
					<p:outputLabel for="laufzeit" value="VerfÃ¼gbarkeitsdauer (min)"></p:outputLabel>
					<p:inputText id="laufzeit"
						value="#{wissenstestVerwaltungBean.laufzeit}" required="true"></p:inputText>
					<p:outputLabel for="zufall" value="Zufallsmodus"></p:outputLabel>
					<p:selectBooleanButton id="zufall" offLabel="Aus" onLabel="An"
						value="#{wissenstestVerwaltungBean.selectedWissenstest.random}"></p:selectBooleanButton>
				</p:panelGrid>


			</p:panel>
			<p:panel id="fragenauswahl" header="Fragenauswahl" toggleable="true"
				collapsed="true" toggleSpeed="500">
				<p:panelGrid columns="2">
					<p:outputLabel for="kategorie" value="Kategorie" />
					<p:selectOneMenu id="kategorie"
						value="#{wissenstestVerwaltungBean.selectedKategorie}"
						converter="omnifaces.SelectItemsIndexConverter"
						panelStyle="width:180px" effect="fade" var="k" style="width:160px"
						filter="true" filterMatchMode="startsWith">
						<f:selectItems value="#{wissenstestVerwaltungBean.kategorien}"
							var="kateg" itemLabel="#{kateg.bezeichnung}" itemValue="#{kateg}" />
						<p:column>
							<h:outputText value="#{k.bezeichnung}" />
						</p:column>
						<p:spacer />
					</p:selectOneMenu>
				</p:panelGrid>
				<p:pickList id="FragenPickList"
					value="#{wissenstestVerwaltungBean.dlmfragen}" var="frage"
					effect="bounce" itemValue="#{frage}" itemLabel="#{frage.text}"
					showSourceControls="true" showTargetControls="true"
					showCheckbox="true" showSourceFilter="true" showTargetFilter="true"
					filterMatchMode="contains">
					<f:facet name="sourceCaption">Fragenpool</f:facet>
					<f:facet name="targetCaption">Wissenstest</f:facet>
					<p:ajax event="transfer" listener="#{wissenstestBean.onTransfer()}"
						update="growl" />
					<p:column style="width:25%">
						<h:outputText styleClass="ui-theme ui-theme-#{frage.text}" />
					</p:column>
					<p:column style="width:75%;">
						<h:outputText value="#{frage.text}" />
					</p:column>
				</p:pickList>
			</p:panel>

			<p:commandButton title="Speichern" update="growl" icon="ui-icon-disk" />
		</h:form>
	</ui:define>

</ui:composition>